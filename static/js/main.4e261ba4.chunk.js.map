{"version":3,"sources":["components/Carousel/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","position","handleNext","props","itemWidth","step","images","frameSize","maxWidth","length","setState","prevState","handlePrev","this","animationDuration","currentPositionStyles","width","transition","transform","className","style","map","image","src","alt","type","onClick","React","Component","App","handleChangeItemWidth","event","target","value","handleChangeFrameSize","handleChangeStep","handleChangeAnimationDuration","htmlFor","id","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e261ba4.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ninterface CarouselProps {\n  images: string[];\n  frameSize: number;\n  itemWidth: number;\n  step: number;\n  animationDuration: number;\n}\n\ninterface CarouselState {\n  position: number;\n}\n\nexport class Carousel extends React.Component <CarouselProps, CarouselState> {\n  state = {\n    position: 0,\n  };\n\n  handleNext = () => {\n    const {\n      itemWidth, step, images, frameSize,\n    } = this.props;\n    const maxWidth = (images.length * itemWidth) - (itemWidth * frameSize);\n\n    if (this.state.position + (itemWidth * step) < maxWidth) {\n      this.setState(prevState => (\n        { position: prevState.position + (itemWidth * step) }));\n    } else {\n      this.setState(prevState => (\n        { position: prevState.position + (maxWidth - prevState.position) }\n      ));\n    }\n  };\n\n  handlePrev = () => {\n    const { itemWidth, step } = this.props;\n\n    if (this.state.position - (itemWidth * step) >= 0) {\n      this.setState(prevState => (\n        { position: prevState.position - (itemWidth * step) }));\n    } else {\n      this.setState({ position: 0 });\n    }\n  };\n\n  render() {\n    const {\n      frameSize,\n      images,\n      itemWidth,\n      animationDuration,\n    } = this.props;\n\n    const currentPositionStyles = {\n      width: itemWidth,\n      transition: `transform ${animationDuration}ms`,\n      transform: `translateX(-${this.state.position}px)`,\n    };\n\n    return (\n      <div className=\"Carousel\" style={{ width: frameSize * itemWidth }}>\n        <ul className=\"Carousel__list\">\n          {images.map((image: string) => {\n            return (\n              <li key={image} className=\"Carousel__list-item\">\n                <img\n                  src={image}\n                  alt={image}\n                  style={currentPositionStyles}\n                />\n              </li>\n            );\n          })}\n        </ul>\n\n        <button type=\"button\" onClick={this.handlePrev}>Prev</button>\n        <button\n          type=\"button\"\n          data-cy=\"next\"\n          onClick={this.handleNext}\n        >\n          Next\n\n        </button>\n      </div>\n    );\n  }\n}\n","import React, { ChangeEvent } from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel/Carousel';\n\ninterface State {\n  images: string[];\n  frameSize: number;\n  itemWidth: number;\n  step: number;\n  animationDuration: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    frameSize: 3,\n    itemWidth: 130,\n    step: 3,\n    animationDuration: 1000,\n  };\n\n  handleChangeItemWidth = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({ itemWidth: +event.target.value });\n  };\n\n  handleChangeFrameSize = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({ frameSize: +event.target.value });\n  };\n\n  handleChangeStep = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({ step: +event.target.value });\n  };\n\n  handleChangeAnimationDuration = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({ animationDuration: +event.target.value });\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      step,\n      animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          step={step}\n          images={images}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n        />\n        <div className=\"inputsContainer\">\n          <label htmlFor=\"itemWidthInput\">\n            Item Width:\n            <input\n              id=\"itemWidthInput\"\n              type=\"number\"\n              value={itemWidth}\n              onChange={this.handleChangeItemWidth}\n            />\n          </label>\n          <label htmlFor=\"frameSizeInput\">\n            Frame Size:\n            <input\n              id=\"frameSizeInput\"\n              type=\"number\"\n              value={frameSize}\n              onChange={this.handleChangeFrameSize}\n            />\n          </label>\n          <label htmlFor=\"stepInput\">\n            Step:\n            <input\n              id=\"stepInput\"\n              type=\"number\"\n              value={step}\n              onChange={this.handleChangeStep}\n            />\n          </label>\n          <label htmlFor=\"animationDurationInput\">\n            Animation Duration:\n            <input\n              id=\"animationDudationInput\"\n              type=\"number\"\n              value={animationDuration}\n              onChange={this.handleChangeAnimationDuration}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}